<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>matlab_learning_2</title>
    <link href="/2024/07/08/matlab-learning-2/"/>
    <url>/2024/07/08/matlab-learning-2/</url>
    
    <content type="html"><![CDATA[<h1 id="z变换基于matlab">z变换，基于matlab</h1><h2 id="z变换由来">z变换由来</h2><p>对连续信号<span class="math inline">\(x(t)\)</span>进行采样<spanclass="math inline">\(x_s(t) = \sum_{n=-\infty}^{+\infty}x(nT)\delta(t-nT)\)</span>，对采样信号做拉普拉斯变换 <spanclass="math display">\[X(s) = \mathcal{L} \left[\sum_{n=-\infty}^{+\infty} x(nT)\delta(t-nT)\right] = \sum_{n=-\infty}^{+\infty} x(nT)\mathcal{L} [\delta(t-nT)] =\sum_{n=-\infty}^{+\infty} x(nT) e^{-nTs}\]</span></p><p>令<span class="math inline">\(z = e^{Ts}\)</span>带入上式，得到<spanclass="math inline">\(X(s) = \sum_{n=-\infty}^{+\infty} x(nT)z^{-n}\)</span></p><h2 id="z变换定义">z变换定义</h2><p><span class="math inline">\(x[n]\)</span>为离散信号 <spanclass="math display">\[X(z) = \mathcal{Z}[x[n]] = \sum_{n=-\infty}^{+\infty} x[n]z^{-n}\]</span></p><h2 id="z反变换定义">z反变换定义</h2><p><span class="math display">\[x[n] = \mathcal{Z}^{-1}[X(z)] = \frac{1}{2\pi j} \oint_c X(z)z^{n-1}dz\]</span></p><h2 id="收敛的充要条件">收敛的充要条件</h2><p><span class="math display">\[\sum_{n=-\infty}^{+\infty} | x[n]z^{-n} | = M &lt; +\infty\]</span></p><h2id="由充要条件推得不同情况下z变换的收敛域">由充要条件推得不同情况下z变换的收敛域</h2><ol type="1"><li><p>有限长序列</p><p><span class="math inline">\(x[n]\)</span> 只在 <spanclass="math inline">\(n_1 \leq n \leq n_2\)</span>有值，则z变换是有限项之和。<spanclass="math inline">\(x[n]\)</span>有界，只要<spanclass="math inline">\(0 &lt; |z| &lt; \infty\)</span>，<spanclass="math inline">\(X(z)\)</span>收敛。 有限长序列的收敛域<spanclass="math inline">\(0 &lt; |z| &lt; \infty\)</span>被称为有限<spanclass="math inline">\(z\)</span>平面。 <span class="math display">\[X(z) = \sum_{n=n_1}^{n_2} x[n]z^{-n}\]</span></p><p>不管什么样的序列，若在<spanclass="math inline">\(n&gt;0\)</span>处序列有值，则在<spanclass="math inline">\(z=0\)</span>处不收敛。若在<spanclass="math inline">\(n&lt;0\)</span>处序列有值，则在<spanclass="math inline">\(z=\infty\)</span>处不收敛。</p></li><li><p>右边序列</p><p><span class="math inline">\(x[n]\)</span>在<spanclass="math inline">\(n \geq n_1\)</span>时有值，其它为0。其z变换为<span class="math display">\[X(z) = \sum_{n=n_1}^{-1} x[n]z^{-n} + \sum_{n=0}^{\infty} x[n]z^{-n}\]</span> 等式右边第一项收敛域为<span class="math inline">\(0 \leq |z|&lt; \infty\)</span>，等式右边第二项收敛域为<spanclass="math inline">\(R_{x-} &lt; |z| \leq\infty\)</span>。收敛域合一起是<span class="math inline">\(R_{x-} &lt;|z| &lt; \infty\)</span></p></li><li><p>因果序列</p><p><span class="math inline">\(x[n]\)</span>在<spanclass="math inline">\(n \geq 0\)</span>时有值，其它为0。其z变换为 <spanclass="math display">\[X(z) = \sum_{n=0}^{\infty} x[n]z^{-n}\]</span> 收敛域为<span class="math inline">\(R_{x-} &lt; |z| \leq\infty\)</span></p></li><li><p>左边序列</p><p><span class="math inline">\(x[n]\)</span>在<spanclass="math inline">\(n \leq n_2\)</span>时有值，其它为0。其z变换为<span class="math display">\[X(z) = \sum_{n=-\infty}^{0} x[n]z^{-n} + \sum_{n=1}^{n_2} x[n]z^{-n}\]</span> 等式右边第二项收敛域为<span class="math inline">\(0 &lt; |z|\leq \infty\)</span>，等式右边第一项收敛域为<spanclass="math inline">\(0 &lt; |z| &lt;R_{x+}\)</span>。收敛域合一起是<span class="math inline">\(0 &lt; |z|&lt; R_{x+}\)</span></p></li><li><p>反因果序列</p><p><span class="math inline">\(x[n]\)</span>在<spanclass="math inline">\(n &lt; 0\)</span>时有值，其它为0。其z变换为 <spanclass="math display">\[X(z) = \sum_{n=-\infty}^{-1} x[n]z^{-n}\]</span> 收敛域为<span class="math inline">\(0 \leq |z| &lt;R_{x+}\)</span></p></li><li><p>双边序列 <spanclass="math inline">\(x[n]\)</span>在任意位置都有值。其z变换为 <spanclass="math display">\[X(z) = \sum_{n=-\infty}^{+\infty} x[n]z^{-n}\]</span> 收敛域为<span class="math inline">\(R_{x-} &lt; |z| &lt;R_{x+}\)</span></p></li></ol><h2 id="z变换性质">z变换性质</h2><table><thead><tr class="header"><th>性质</th><th>信号</th><th>z变换</th><th>收敛域</th></tr></thead><tbody><tr class="odd"><td></td><td><span class="math inline">\(x[n]\)</span></td><td><span class="math inline">\(X(z)\)</span></td><td><span class="math inline">\(R\)</span></td></tr><tr class="even"><td></td><td><span class="math inline">\(x_1[n]\)</span></td><td><span class="math inline">\(X_2(z)\)</span></td><td><span class="math inline">\(R_1\)</span></td></tr><tr class="odd"><td></td><td><span class="math inline">\(x_2[n]\)</span></td><td><span class="math inline">\(X_3(z)\)</span></td><td><span class="math inline">\(R_2\)</span></td></tr><tr class="even"><td>线性</td><td><span class="math inline">\(ax_1[n] + bx_2[n]\)</span></td><td><span class="math inline">\(aX_1(z) + bX_2(z)\)</span></td><td>至少是<span class="math inline">\(R_1，R_2\)</span>相交</td></tr><tr class="odd"><td>时移</td><td><span class="math inline">\(x[n-n_0]\)</span></td><td><span class="math inline">\(z^{-n_0}X(z)\)</span></td><td><span class="math inline">\(R\)</span>可能增加或去除0和<spanclass="math inline">\(\infty\)</span>点</td></tr><tr class="even"><td>z域尺度变换</td><td><span class="math inline">\(e^{jw_0 n}x[n]\)</span></td><td><span class="math inline">\(X(e^{-jw_0}z)\)</span></td><td><span class="math inline">\(R\)</span></td></tr><tr class="odd"><td></td><td><span class="math inline">\(z_0^n x[n]\)</span></td><td><span class="math inline">\(X(z z_0^{-1})\)</span></td><td><span class="math inline">\(z_0 R\)</span></td></tr><tr class="even"><td></td><td><span class="math inline">\(a^n x[n]\)</span></td><td><span class="math inline">\(X(a^{-1}z)\)</span></td><td><span class="math inline">\(R\)</span>的比例伸缩</td></tr><tr class="odd"><td>时间反转</td><td><span class="math inline">\(x[-n]\)</span></td><td><span class="math inline">\(X(z^{-1})\)</span></td><td><span class="math inline">\(R^{-1}\)</span></td></tr><tr class="even"><td>时间扩展</td><td><span class="math inline">\(x_{(k)}[n] = x[r], n = rk; ~~ x_{(k)}[n]= 0, n \neq rk\)</span></td><td><span class="math inline">\(X(z^k)\)</span></td><td><span class="math inline">\(R^{1/k}\)</span></td></tr><tr class="odd"><td>共轭</td><td><span class="math inline">\(x^*[n]\)</span></td><td><span class="math inline">\(X^*(z^*)\)</span></td><td><span class="math inline">\(R\)</span></td></tr><tr class="even"><td>卷积</td><td><span class="math inline">\(x_1[n] * x_2[n]\)</span></td><td><span class="math inline">\(X_1(z)X_2(z)\)</span></td><td>至少是<span class="math inline">\(R_1,R_2\)</span>相交</td></tr><tr class="odd"><td>一次差分</td><td><span class="math inline">\(x[n] - x[n-1]\)</span></td><td><span class="math inline">\((1 - z^{-1})X(z)\)</span></td><td>至少是<span class="math inline">\(R\)</span>和<spanclass="math inline">\(| z| &gt; 0\)</span>的相交</td></tr><tr class="even"><td>累加</td><td><span class="math inline">\(\sum_{k = -\infty}^{n}x[k]\)</span></td><td><span class="math inline">\(\frac{1}{1 - z^{-1}} X(z)\)</span></td><td>至少是<span class="math inline">\(R\)</span>和<spanclass="math inline">\(| z| &gt;1\)</span>的相交</td></tr><tr class="odd"><td>z域微分</td><td><span class="math inline">\(nx[n]\)</span></td><td><span class="math inline">\(-z\frac{dX(z)}{dz}\)</span></td><td><span class="math inline">\(R\)</span></td></tr></tbody></table><p>初值定理：若<spanclass="math inline">\(n&lt;0,x[n]=0\)</span>，则<spanclass="math inline">\(x[0] = \lim_{z\to \infty} X(z)\)</span></p><h2id="z变换与离散时间傅里叶变换关系">z变换与离散时间傅里叶变换关系</h2><p>当<span class="math inline">\(|z| =1\)</span>时，z变换就是离散时间傅里叶变换。当z变换的收敛域包括单位圆时，其离散时间傅里叶变换收敛。</p><h2 id="z变换matlab代码">z变换matlab代码</h2><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs matlab">syms n         <span class="hljs-comment">% n是符号变量，后面的运算都是符号运算</span><br>f = <span class="hljs-built_in">sin</span>(n);<br>F = ztrans(f);<br><span class="hljs-built_in">disp</span>(F);<br>w0 = <span class="hljs-number">2</span>*<span class="hljs-built_in">pi</span>/<span class="hljs-number">800</span>;<br>A  = <span class="hljs-number">10</span>;<br>phi= <span class="hljs-built_in">pi</span>/<span class="hljs-number">6</span>;<br><br>y = <span class="hljs-built_in">cos</span>(w0*n + phi) + A*<span class="hljs-built_in">sin</span>(w0*n);<br>Y = ztrans(y);<br><span class="hljs-built_in">disp</span>(Y);<br>subplot(<span class="hljs-number">1</span>,<span class="hljs-number">3</span>,<span class="hljs-number">1</span>);<br>fplot(F);<br>subplot(<span class="hljs-number">1</span>,<span class="hljs-number">3</span>,<span class="hljs-number">2</span>);<br>fplot(Y);<br><br>st = heaviside(n); <span class="hljs-comment">% 阶跃信号的符号函数</span><br>ST = ztrans(st);<br><span class="hljs-built_in">disp</span>(ST);<br>subplot(<span class="hljs-number">1</span>,<span class="hljs-number">3</span>,<span class="hljs-number">3</span>);<br>fplot(ST);<br></code></pre></td></tr></table></figure><h2 id="matlab中的z逆变换">matlab中的z逆变换</h2><p>matlab中的z逆变换结果都是因果序列，所以不用指定收敛域</p><p>参考https://ww2.mathworks.cn/help/symbolic/sym.iztrans.html<figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs matlab">syms z n;<br>a = <span class="hljs-number">2</span>;<br><br>F = a*z^(<span class="hljs-number">-1</span>) / (<span class="hljs-number">1</span> - a*z^(<span class="hljs-number">-1</span>))^<span class="hljs-number">2</span>;<br>f = iztrans(F, n);<br><span class="hljs-built_in">disp</span>(f);<br><br></code></pre></td></tr></table></figure></p><h2 id="lti系统与z变换">LTI系统与z变换</h2><p>在离散线性时不变系统的分析和表示中，z变换发挥特别重要的作用 <spanclass="math display">\[Y(z) = X(z)H(z)\]</span></p><p><spanclass="math inline">\(H(z)\)</span>称为传递函数，是系统单位脉冲响应的z变换。只要单位圆在传函的收敛域内，将<span class="math inline">\(z =e^{jw}\)</span>带入<span class="math inline">\(H(z)\)</span>，则<spanclass="math inline">\(H(z)\)</span>变成系统的频率响应（z变换与傅里叶变换的关系）。</p><h3 id="因果系统">因果系统</h3><p>一个离散线性时不变系统，<spanclass="math inline">\(H(z)\)</span>的收敛域在某个圆的外边，包括无穷远点，该系统是因果的。对应前文因果序列的收敛域。h(n)为因果序列。</p><p>若<spanclass="math inline">\(H(z)\)</span>表示成多项式之比，其分子阶次不能高于分母阶次。</p><p>因果系统的初始松弛条件：<span class="math inline">\(if ~ x[n] = 0, n&lt; n_0 ~~ then ~ y[n] = 0, n &lt; n_0\)</span>，其中<spanclass="math inline">\(y[n] = \sum_{k = n_0}^{\infty}x[k]h[n-k]\)</span></p><p>满足因果性的LTI系统在未开始输入的情况下是不会有输出的</p><p>如果一个LTI系统是因果的，那么该系统就满足初始松弛条件；如果一个系统由线性常系数差分方程表征，并满足初始松弛条件，那么这就是一个满足因果性的LTI系统。</p><h2id="lti系统的差分方程与matlab代码">LTI系统的差分方程与matlab代码</h2><p>matlab中系统的差分方程一般形式： <span class="math display">\[\sum_{k = 1}^{N} a[k]y[n-(k-1)] = \sum_{m = 1}^{M} b[m]x[n - (m-1)]\]</span> 利用z变换的时移性质，其系统传函表示为： <spanclass="math display">\[Y(z) = \frac{ b[1] + b[2]z^{-1} + b[3]z^{-2} ... + b[M]z^{-(M-1)} }{a[1] + a[2]z^{-1} + a[3]z^{-2} ... + a[N]z^{-(N-1) }} X(z)\]</span></p><p>一个离散线性时不变系统的稳定性等效于单位脉冲响应是绝对可和的。这种情况下h[n]的傅里叶变换收敛，所以传递函数的收敛域要包括单位圆。</p><p>以下代码分别演示了稳定与不稳定系统的分析：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs matlab">b1 = [<span class="hljs-number">-4</span> <span class="hljs-number">5</span>];<br>a1 = [<span class="hljs-number">1</span> <span class="hljs-number">-6</span> <span class="hljs-number">9</span>]; <span class="hljs-comment">% 不稳定系统</span><br><br>[r,p,k] = residuez(b1,a1);<br><br><span class="hljs-built_in">disp</span>(r);<br><span class="hljs-built_in">disp</span>(p);<br><span class="hljs-built_in">disp</span>(k);<br><br><span class="hljs-built_in">figure</span>(<span class="hljs-number">1</span>);<br><br>zplane(b1,a1);<br><br>h=[<span class="hljs-built_in">zeros</span>(<span class="hljs-number">1</span>,<span class="hljs-number">20</span>),<span class="hljs-number">1</span>,<span class="hljs-built_in">zeros</span>(<span class="hljs-number">1</span>,<span class="hljs-number">1000</span>)];<br><br>y=filter(b1,a1,h);<br>n=<span class="hljs-number">-20</span>:<span class="hljs-number">1000</span>;<br><br><span class="hljs-built_in">figure</span>(<span class="hljs-number">2</span>);<br><br>stem(n,y);<br>xlabel(<span class="hljs-string">&#x27;n&#x27;</span>);<br>ylabel(<span class="hljs-string">&#x27;h(n)&#x27;</span>);<br><br>b2=<span class="hljs-number">1</span>;<br>a2=[<span class="hljs-number">1</span>,<span class="hljs-number">-1</span>,<span class="hljs-number">0.9</span>]; <span class="hljs-comment">% 稳定系统</span><br><span class="hljs-built_in">figure</span>(<span class="hljs-number">3</span>);<br>zplane(b2,a2);<br><br><span class="hljs-built_in">figure</span>(<span class="hljs-number">4</span>);<br>y2 = filter(b2,a2,h);<br>stem(n,y2);<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>matlab_learning_1</title>
    <link href="/2024/07/08/matlab-learning-1/"/>
    <url>/2024/07/08/matlab-learning-1/</url>
    
    <content type="html"><![CDATA[<h1id="尝试自己写一个离散信号卷积程序">尝试自己写一个离散信号卷积程序</h1><h2 id="离散信号卷积公式">离散信号卷积公式</h2><p>离散信号卷积公式： <span class="math display">\[y[n] = \sum_{k = -\infty}^{+\infty} x[k]h[n-k]\]</span></p><p>直接将公式翻译成matlab代码。代码如下：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs matlab"><br>A = <span class="hljs-number">5</span>;                         <span class="hljs-comment">% 幅度</span><br>w0 = <span class="hljs-number">50e3</span>*<span class="hljs-number">2</span>*<span class="hljs-built_in">pi</span>;                <span class="hljs-comment">% 圆频率</span><br>phi = <span class="hljs-built_in">pi</span>/<span class="hljs-number">2</span>;                    <span class="hljs-comment">% 相位</span><br>t = <span class="hljs-number">0</span> : <span class="hljs-number">1</span>/<span class="hljs-number">50e3</span>/<span class="hljs-number">50</span> : <span class="hljs-number">1</span>/<span class="hljs-number">50e3</span>*<span class="hljs-number">10</span>; <span class="hljs-comment">% 时间向量</span><br><br>y = A*<span class="hljs-built_in">sin</span>(w0*t + phi);         <span class="hljs-comment">% 待卷积信号y</span><br><br>subplot(<span class="hljs-number">5</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>);                <span class="hljs-comment">% 生成5行1列的曲线图，当前曲线图位置在第1行</span><br><span class="hljs-built_in">plot</span>(t,y);<br><span class="hljs-comment">% axis equal;</span><br>                               <span class="hljs-comment">% 待卷积信号z</span><br>z = <span class="hljs-number">2</span>*A*<span class="hljs-built_in">cos</span>(<span class="hljs-number">2</span>*w0*t + phi) .* <span class="hljs-built_in">exp</span>(<span class="hljs-number">-20000</span>*t);<br><br>subplot(<span class="hljs-number">5</span>,<span class="hljs-number">1</span>,<span class="hljs-number">2</span>);                <span class="hljs-comment">% 生成5行1列的曲线图，当前曲线图位置在第2行</span><br><span class="hljs-built_in">plot</span>(t, z);<br><span class="hljs-comment">% axis equal;</span><br><br>L = <span class="hljs-built_in">length</span>(t);                 <span class="hljs-comment">% t向量的长度L = 501，下标从1开始，到501结束</span><br>answer = <span class="hljs-built_in">zeros</span>(<span class="hljs-number">1</span>,L*<span class="hljs-number">2</span>);         <span class="hljs-comment">% answer向量用于存放卷积结果，卷积结果长度为 L + L - 1</span><br><span class="hljs-keyword">for</span> <span class="hljs-built_in">i</span> = <span class="hljs-number">2</span>:<span class="hljs-number">2</span>*L                  <span class="hljs-comment">% 从下标2开始存放卷积结果，因为信号向量下标从1开始，</span><br>    <span class="hljs-keyword">for</span> k = <span class="hljs-number">1</span>:L                <span class="hljs-comment">% 只有当i=2,k=1时下标有效</span><br>        <span class="hljs-keyword">if</span> (<span class="hljs-built_in">i</span>-k &gt;= <span class="hljs-number">1</span> &amp;&amp; <span class="hljs-built_in">i</span>-k &lt;= <span class="hljs-number">501</span>)<br>            answer(<span class="hljs-built_in">i</span>) = answer(<span class="hljs-built_in">i</span>) + y(k) * z(<span class="hljs-built_in">i</span>-k);<br>        <span class="hljs-keyword">end</span><br>    <span class="hljs-keyword">end</span><br><span class="hljs-keyword">end</span><br><br>subplot(<span class="hljs-number">5</span>,<span class="hljs-number">1</span>,<span class="hljs-number">3</span>);                <span class="hljs-comment">% 生成5行1列的曲线图，当前曲线图位置在第3行</span><br><span class="hljs-built_in">plot</span>(answer(<span class="hljs-number">2</span>:L*<span class="hljs-number">2</span>));<br><br></code></pre></td></tr></table></figure><h2 id="conv函数">conv函数</h2><p>matlab中卷积函数名为<code>conv</code>，用法很简单<code>answer2 = conv(y,z)</code>，因为向量<code>y</code>，<code>z</code>的长度都是501，所以<code>answer2</code>长度501+501-1=1001</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs matlab">answer2 = conv(y,z);           <span class="hljs-comment">% 使用matlab内部卷积函数</span><br>subplot(<span class="hljs-number">5</span>,<span class="hljs-number">1</span>,<span class="hljs-number">4</span>);                <span class="hljs-comment">% 生成5行1列的曲线图，当前曲线图位置在第4行</span><br><span class="hljs-built_in">plot</span>(answer2);<br></code></pre></td></tr></table></figure><h2 id="检验">检验</h2><p>最后新建一个数组存放两个卷积结果的差值，用于判断自己写的卷积程序正确性<figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs matlab">delta_ans = <span class="hljs-built_in">zeros</span>(<span class="hljs-number">1</span>, L*<span class="hljs-number">2</span>);     <span class="hljs-comment">% 两个卷积结果做差比较</span><br><span class="hljs-keyword">for</span> <span class="hljs-built_in">i</span> = <span class="hljs-number">1</span>:L*<span class="hljs-number">2</span><span class="hljs-number">-1</span><br>    delta_ans(<span class="hljs-built_in">i</span>) = answer2(<span class="hljs-built_in">i</span>) - answer(<span class="hljs-built_in">i</span>+<span class="hljs-number">1</span>);<br><span class="hljs-keyword">end</span><br><br>subplot(<span class="hljs-number">5</span>,<span class="hljs-number">1</span>,<span class="hljs-number">5</span>);                <span class="hljs-comment">% 生成5行1列的曲线图，当前曲线图位置在第5行</span><br><span class="hljs-built_in">plot</span>(delta_ans);               <span class="hljs-comment">% 可以看到结果相差不大</span><br></code></pre></td></tr></table></figure></p><h2 id="完整代码">完整代码</h2><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><code class="hljs matlab"><br>A = <span class="hljs-number">5</span>;                         <span class="hljs-comment">% 幅度</span><br>w0 = <span class="hljs-number">50e3</span>*<span class="hljs-number">2</span>*<span class="hljs-built_in">pi</span>;                <span class="hljs-comment">% 圆频率</span><br>phi = <span class="hljs-built_in">pi</span>/<span class="hljs-number">2</span>;                    <span class="hljs-comment">% 相位</span><br>t = <span class="hljs-number">0</span> : <span class="hljs-number">1</span>/<span class="hljs-number">50e3</span>/<span class="hljs-number">50</span> : <span class="hljs-number">1</span>/<span class="hljs-number">50e3</span>*<span class="hljs-number">10</span>; <span class="hljs-comment">% 时间向量</span><br><br>y = A*<span class="hljs-built_in">sin</span>(w0*t + phi);         <span class="hljs-comment">% 待卷积信号y</span><br><br>subplot(<span class="hljs-number">5</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>);                <span class="hljs-comment">% 生成5行1列的曲线图，当前曲线图位置在第1行</span><br><span class="hljs-built_in">plot</span>(t,y);<br><span class="hljs-comment">% axis equal;</span><br>                               <span class="hljs-comment">% 待卷积信号z</span><br>z = <span class="hljs-number">2</span>*A*<span class="hljs-built_in">cos</span>(<span class="hljs-number">2</span>*w0*t + phi) .* <span class="hljs-built_in">exp</span>(<span class="hljs-number">-20000</span>*t);<br><br>subplot(<span class="hljs-number">5</span>,<span class="hljs-number">1</span>,<span class="hljs-number">2</span>);                <span class="hljs-comment">% 生成5行1列的曲线图，当前曲线图位置在第2行</span><br><span class="hljs-built_in">plot</span>(t, z);<br><span class="hljs-comment">% axis equal;</span><br><br>L = <span class="hljs-built_in">length</span>(t);                 <span class="hljs-comment">% t向量的长度L = 501，下标从1开始，到501结束</span><br>answer = <span class="hljs-built_in">zeros</span>(<span class="hljs-number">1</span>,L*<span class="hljs-number">2</span>);         <span class="hljs-comment">% answer向量用于存放卷积结果，卷积结果长度为 L + L - 1</span><br><span class="hljs-keyword">for</span> <span class="hljs-built_in">i</span> = <span class="hljs-number">2</span>:<span class="hljs-number">2</span>*L                  <span class="hljs-comment">% 从下标2开始存放卷积结果，因为信号向量下标从1开始，</span><br>    <span class="hljs-keyword">for</span> k = <span class="hljs-number">1</span>:L                <span class="hljs-comment">% 只有当i=2,k=1时下标有效</span><br>        <span class="hljs-keyword">if</span> (<span class="hljs-built_in">i</span>-k &gt;= <span class="hljs-number">1</span> &amp;&amp; <span class="hljs-built_in">i</span>-k &lt;= <span class="hljs-number">501</span>)<br>            answer(<span class="hljs-built_in">i</span>) = answer(<span class="hljs-built_in">i</span>) + y(k) * z(<span class="hljs-built_in">i</span>-k);<br>        <span class="hljs-keyword">end</span><br>    <span class="hljs-keyword">end</span><br><span class="hljs-keyword">end</span><br><br>subplot(<span class="hljs-number">5</span>,<span class="hljs-number">1</span>,<span class="hljs-number">3</span>);                <span class="hljs-comment">% 生成5行1列的曲线图，当前曲线图位置在第3行</span><br><span class="hljs-built_in">plot</span>(answer(<span class="hljs-number">2</span>:L*<span class="hljs-number">2</span>));<br><br>answer2 = conv(y,z);           <span class="hljs-comment">% 使用matlab内部卷积函数</span><br>subplot(<span class="hljs-number">5</span>,<span class="hljs-number">1</span>,<span class="hljs-number">4</span>);                <span class="hljs-comment">% 生成5行1列的曲线图，当前曲线图位置在第4行</span><br><span class="hljs-built_in">plot</span>(answer2);<br><br><br>delta_ans = <span class="hljs-built_in">zeros</span>(<span class="hljs-number">1</span>, L*<span class="hljs-number">2</span>);     <span class="hljs-comment">% 两个卷积结果做差比较</span><br><span class="hljs-keyword">for</span> <span class="hljs-built_in">i</span> = <span class="hljs-number">1</span>:L*<span class="hljs-number">2</span><span class="hljs-number">-1</span><br>    delta_ans(<span class="hljs-built_in">i</span>) = answer2(<span class="hljs-built_in">i</span>) - answer(<span class="hljs-built_in">i</span>+<span class="hljs-number">1</span>);<br><span class="hljs-keyword">end</span><br><br>subplot(<span class="hljs-number">5</span>,<span class="hljs-number">1</span>,<span class="hljs-number">5</span>);                <span class="hljs-comment">% 生成5行1列的曲线图，当前曲线图位置在第5行</span><br><span class="hljs-built_in">plot</span>(delta_ans);               <span class="hljs-comment">% 可以看到结果相差不大</span><br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>test_page</title>
    <link href="/2024/07/06/test-page/"/>
    <url>/2024/07/06/test-page/</url>
    
    <content type="html"><![CDATA[<h1 id="波函数">波函数</h1><p>粒子的波函数<span class="math inline">\(\Psi(x,t)\)</span>（一维）或<span class="math inline">\(\Psi(\boldsymbol{r},t)\)</span>（三维）是复域函数，不能直接平方。而应该用模平方<spanclass="math inline">\(|\Psi(\boldsymbol{r}, t)|^2 \equiv \Psi^*\Psi\)</span>。<spanclass="math inline">\(\Psi\)</span>的共轭复数是<spanclass="math inline">\(\Psi^{*}\)</span>。全空间的概率密度积分为1，即<spanclass="math inline">\(\int \Psi^* \Psi dV = 1\)</span></p><h1 id="量子力学的基本假设">量子力学的基本假设</h1><p>粒子的波函数<span class="math inline">\(\Psi(\boldsymbol{r},t) =\psi_0 e^{i(\boldsymbol{k\cdot r}-wt)}\)</span></p><p>能量、动量变换<span class="math inline">\(E\)</span> -&gt; <spanclass="math inline">\(i\hbar\frac{\partial}{\partial t}\)</span>， <spanclass="math inline">\(\boldsymbol{P}\)</span> -&gt; <spanclass="math inline">\(-i\hbar \nabla\)</span></p><h1 id="薛定谔方程一般形式">薛定谔方程一般形式</h1><p>薛定谔方程一般形式： <span class="math display">\[\left[ -\frac{\hbar^2}{2m} \nabla^2 + V(\boldsymbol{r}) \right]\Psi(\boldsymbol{r}, t) = i\hbar\frac{\partial}{\partialt}\Psi(\boldsymbol{r}, t)\]</span> 其对应粒子质量<spanclass="math inline">\(m\)</span>，动量<spanclass="math inline">\(\boldsymbol{p}\)</span>，在势场<spanclass="math inline">\(V(\boldsymbol{r})\)</span>中的粒子能量表达式：<span class="math display">\[E = \frac{\boldsymbol{p}^2}{2m} + V(\boldsymbol{r})\]</span></p><p>薛定谔方程为线性微分方程，所以方程的解可以线性叠加，波函数是方程的解，所以波函数可以线性叠加</p><h1 id="定态薛定谔方程">定态薛定谔方程</h1><p><spanclass="math inline">\(V(\boldsymbol{r})\)</span>不显含时间t，可以用变数分离法求薛定谔方程特解。令<spanclass="math inline">\(\Psi(\boldsymbol{r}, t) =\psi(\boldsymbol{r})T(t)\)</span> 两边除以<spanclass="math inline">\(\psi T\)</span>得到 <span class="math display">\[\frac{1}{\psi} \left[ -\frac{\hbar^2}{2m} \nabla^2 + V(\boldsymbol{r})\right]\psi = \frac{i\hbar}{T} \frac{dT}{dt}\]</span> 令<spanclass="math inline">\(E\)</span>为分离常数，其具有能量量纲，与<spanclass="math inline">\(\boldsymbol{r},t\)</span>无关 <spanclass="math display">\[\frac{i\hbar}{T} \frac{dT}{dt} = E \quad (1)\]</span> <span class="math display">\[\frac{1}{\psi} \left[ -\frac{\hbar^2}{2m} \nabla^2 + V(\boldsymbol{r})\right]\psi = E \quad (2)\]</span> 解<span class="math inline">\((1)\)</span>得<spanclass="math inline">\(T=T_0e^{-iEt/\hbar}\)</span>。把常数<spanclass="math inline">\(T_0\)</span>归到<spanclass="math inline">\(\psi\)</span>中，<spanclass="math inline">\(\Psi(\boldsymbol{r}, t) =\psi(\boldsymbol{r})e^{-iEt/\hbar}\)</span>。</p><p>概率密度<span class="math inline">\(\Psi^*\Psi =\psi^*\psi\)</span>与时间无关</p><p>式<span class="math inline">\((2)\)</span>就是定态薛定谔方程 <spanclass="math display">\[\left[ -\frac{\hbar^2}{2m} \nabla^2 + V(\boldsymbol{r}) \right]\psi =E\psi\]</span></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2024/07/06/hello-world/"/>
    <url>/2024/07/06/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your veryfirst post. Check <a href="https://hexo.io/docs/">documentation</a> formore info. If you get any problems when using Hexo, you can find theanswer in <ahref="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> oryou can ask me on <ahref="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="quick-start">Quick Start</h2><h3 id="create-a-new-post">Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <ahref="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="run-server">Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="generate-static-files">Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <ahref="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="deploy-to-remote-sites">Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <ahref="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
