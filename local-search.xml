<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>matlab_learning_1</title>
    <link href="/2024/07/08/matlab-learning-1/"/>
    <url>/2024/07/08/matlab-learning-1/</url>
    
    <content type="html"><![CDATA[<h1id="尝试自己写一个离散信号卷积程序">尝试自己写一个离散信号卷积程序</h1><h2 id="离散信号卷积公式">离散信号卷积公式</h2><p>离散信号卷积公式： <span class="math display">\[y[n] = \sum_{k = -\infty}^{+\infty} x[k]h[n-k]\]</span></p><p>直接将公式翻译成matlab代码。代码如下：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs matlab"><br>A = <span class="hljs-number">5</span>;                         <span class="hljs-comment">% 幅度</span><br>w0 = <span class="hljs-number">50e3</span>*<span class="hljs-number">2</span>*<span class="hljs-built_in">pi</span>;                <span class="hljs-comment">% 圆频率</span><br>phi = <span class="hljs-built_in">pi</span>/<span class="hljs-number">2</span>;                    <span class="hljs-comment">% 相位</span><br>t = <span class="hljs-number">0</span> : <span class="hljs-number">1</span>/<span class="hljs-number">50e3</span>/<span class="hljs-number">50</span> : <span class="hljs-number">1</span>/<span class="hljs-number">50e3</span>*<span class="hljs-number">10</span>; <span class="hljs-comment">% 时间向量</span><br><br>y = A*<span class="hljs-built_in">sin</span>(w0*t + phi);         <span class="hljs-comment">% 待卷积信号y</span><br><br>subplot(<span class="hljs-number">5</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>);                <span class="hljs-comment">% 生成5行1列的曲线图，当前曲线图位置在第1行</span><br><span class="hljs-built_in">plot</span>(t,y);<br><span class="hljs-comment">% axis equal;</span><br>                               <span class="hljs-comment">% 待卷积信号z</span><br>z = <span class="hljs-number">2</span>*A*<span class="hljs-built_in">cos</span>(<span class="hljs-number">2</span>*w0*t + phi) .* <span class="hljs-built_in">exp</span>(<span class="hljs-number">-20000</span>*t);<br><br>subplot(<span class="hljs-number">5</span>,<span class="hljs-number">1</span>,<span class="hljs-number">2</span>);                <span class="hljs-comment">% 生成5行1列的曲线图，当前曲线图位置在第2行</span><br><span class="hljs-built_in">plot</span>(t, z);<br><span class="hljs-comment">% axis equal;</span><br><br>L = <span class="hljs-built_in">length</span>(t);                 <span class="hljs-comment">% t向量的长度L = 501，下标从1开始，到501结束</span><br>answer = <span class="hljs-built_in">zeros</span>(<span class="hljs-number">1</span>,L*<span class="hljs-number">2</span>);         <span class="hljs-comment">% answer向量用于存放卷积结果，卷积结果长度为 L + L - 1</span><br><span class="hljs-keyword">for</span> <span class="hljs-built_in">i</span> = <span class="hljs-number">2</span>:<span class="hljs-number">2</span>*L                  <span class="hljs-comment">% 从下标2开始存放卷积结果，因为信号向量下标从1开始，</span><br>    <span class="hljs-keyword">for</span> k = <span class="hljs-number">1</span>:L                <span class="hljs-comment">% 只有当i=2,k=1时下标有效</span><br>        <span class="hljs-keyword">if</span> (<span class="hljs-built_in">i</span>-k &gt;= <span class="hljs-number">1</span> &amp;&amp; <span class="hljs-built_in">i</span>-k &lt;= <span class="hljs-number">501</span>)<br>            answer(<span class="hljs-built_in">i</span>) = answer(<span class="hljs-built_in">i</span>) + y(k) * z(<span class="hljs-built_in">i</span>-k);<br>        <span class="hljs-keyword">end</span><br>    <span class="hljs-keyword">end</span><br><span class="hljs-keyword">end</span><br><br>subplot(<span class="hljs-number">5</span>,<span class="hljs-number">1</span>,<span class="hljs-number">3</span>);                <span class="hljs-comment">% 生成5行1列的曲线图，当前曲线图位置在第3行</span><br><span class="hljs-built_in">plot</span>(answer(<span class="hljs-number">2</span>:L*<span class="hljs-number">2</span>));<br><br></code></pre></td></tr></table></figure><h2 id="conv函数">conv函数</h2><p>matlab中卷积函数名为<code>conv</code>，用法很简单<code>answer2 = conv(y,z)</code>，因为向量<code>y</code>，<code>z</code>的长度都是501，所以<code>answer2</code>长度501+501-1=1001</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">answer2</span> = conv(y,z);           % 使用matlab内部卷积函数<br><span class="hljs-attribute">subplot</span>(<span class="hljs-number">5</span>,<span class="hljs-number">1</span>,<span class="hljs-number">4</span>);                % 生成<span class="hljs-number">5</span>行<span class="hljs-number">1</span>列的曲线图，当前曲线图位置在第<span class="hljs-number">4</span>行<br><span class="hljs-attribute">plot</span>(answer2);<br></code></pre></td></tr></table></figure><h2 id="检验">检验</h2><p>最后新建一个数组存放两个卷积结果的差值，用于判断自己写的卷积程序正确性<figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">delta_ans</span> = zeros(<span class="hljs-number">1</span>, L*<span class="hljs-number">2</span>);     % 两个卷积结果做差比较<br><span class="hljs-attribute">for</span> i = <span class="hljs-number">1</span>:L*<span class="hljs-number">2</span>-<span class="hljs-number">1</span><br>    <span class="hljs-attribute">delta_ans</span>(i) = answer2(i) - answer(i+<span class="hljs-number">1</span>);<br><span class="hljs-attribute">end</span><br><br><span class="hljs-attribute">subplot</span>(<span class="hljs-number">5</span>,<span class="hljs-number">1</span>,<span class="hljs-number">5</span>);                % 生成<span class="hljs-number">5</span>行<span class="hljs-number">1</span>列的曲线图，当前曲线图位置在第<span class="hljs-number">5</span>行<br><span class="hljs-attribute">plot</span>(delta_ans);               % 可以看到结果相差不大<br></code></pre></td></tr></table></figure></p><h2 id="完整代码">完整代码</h2><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><code class="hljs matlab"><br>A = <span class="hljs-number">5</span>;                         <span class="hljs-comment">% 幅度</span><br>w0 = <span class="hljs-number">50e3</span>*<span class="hljs-number">2</span>*<span class="hljs-built_in">pi</span>;                <span class="hljs-comment">% 圆频率</span><br>phi = <span class="hljs-built_in">pi</span>/<span class="hljs-number">2</span>;                    <span class="hljs-comment">% 相位</span><br>t = <span class="hljs-number">0</span> : <span class="hljs-number">1</span>/<span class="hljs-number">50e3</span>/<span class="hljs-number">50</span> : <span class="hljs-number">1</span>/<span class="hljs-number">50e3</span>*<span class="hljs-number">10</span>; <span class="hljs-comment">% 时间向量</span><br><br>y = A*<span class="hljs-built_in">sin</span>(w0*t + phi);         <span class="hljs-comment">% 待卷积信号y</span><br><br>subplot(<span class="hljs-number">5</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>);                <span class="hljs-comment">% 生成5行1列的曲线图，当前曲线图位置在第1行</span><br><span class="hljs-built_in">plot</span>(t,y);<br><span class="hljs-comment">% axis equal;</span><br>                               <span class="hljs-comment">% 待卷积信号z</span><br>z = <span class="hljs-number">2</span>*A*<span class="hljs-built_in">cos</span>(<span class="hljs-number">2</span>*w0*t + phi) .* <span class="hljs-built_in">exp</span>(<span class="hljs-number">-20000</span>*t);<br><br>subplot(<span class="hljs-number">5</span>,<span class="hljs-number">1</span>,<span class="hljs-number">2</span>);                <span class="hljs-comment">% 生成5行1列的曲线图，当前曲线图位置在第2行</span><br><span class="hljs-built_in">plot</span>(t, z);<br><span class="hljs-comment">% axis equal;</span><br><br>L = <span class="hljs-built_in">length</span>(t);                 <span class="hljs-comment">% t向量的长度L = 501，下标从1开始，到501结束</span><br>answer = <span class="hljs-built_in">zeros</span>(<span class="hljs-number">1</span>,L*<span class="hljs-number">2</span>);         <span class="hljs-comment">% answer向量用于存放卷积结果，卷积结果长度为 L + L - 1</span><br><span class="hljs-keyword">for</span> <span class="hljs-built_in">i</span> = <span class="hljs-number">2</span>:<span class="hljs-number">2</span>*L                  <span class="hljs-comment">% 从下标2开始存放卷积结果，因为信号向量下标从1开始，</span><br>    <span class="hljs-keyword">for</span> k = <span class="hljs-number">1</span>:L                <span class="hljs-comment">% 只有当i=2,k=1时下标有效</span><br>        <span class="hljs-keyword">if</span> (<span class="hljs-built_in">i</span>-k &gt;= <span class="hljs-number">1</span> &amp;&amp; <span class="hljs-built_in">i</span>-k &lt;= <span class="hljs-number">501</span>)<br>            answer(<span class="hljs-built_in">i</span>) = answer(<span class="hljs-built_in">i</span>) + y(k) * z(<span class="hljs-built_in">i</span>-k);<br>        <span class="hljs-keyword">end</span><br>    <span class="hljs-keyword">end</span><br><span class="hljs-keyword">end</span><br><br>subplot(<span class="hljs-number">5</span>,<span class="hljs-number">1</span>,<span class="hljs-number">3</span>);                <span class="hljs-comment">% 生成5行1列的曲线图，当前曲线图位置在第3行</span><br><span class="hljs-built_in">plot</span>(answer(<span class="hljs-number">2</span>:L*<span class="hljs-number">2</span>));<br><br>answer2 = conv(y,z);           <span class="hljs-comment">% 使用matlab内部卷积函数</span><br>subplot(<span class="hljs-number">5</span>,<span class="hljs-number">1</span>,<span class="hljs-number">4</span>);                <span class="hljs-comment">% 生成5行1列的曲线图，当前曲线图位置在第4行</span><br><span class="hljs-built_in">plot</span>(answer2);<br><br><br>delta_ans = <span class="hljs-built_in">zeros</span>(<span class="hljs-number">1</span>, L*<span class="hljs-number">2</span>);     <span class="hljs-comment">% 两个卷积结果做差比较</span><br><span class="hljs-keyword">for</span> <span class="hljs-built_in">i</span> = <span class="hljs-number">1</span>:L*<span class="hljs-number">2</span><span class="hljs-number">-1</span><br>    delta_ans(<span class="hljs-built_in">i</span>) = answer2(<span class="hljs-built_in">i</span>) - answer(<span class="hljs-built_in">i</span>+<span class="hljs-number">1</span>);<br><span class="hljs-keyword">end</span><br><br>subplot(<span class="hljs-number">5</span>,<span class="hljs-number">1</span>,<span class="hljs-number">5</span>);                <span class="hljs-comment">% 生成5行1列的曲线图，当前曲线图位置在第5行</span><br><span class="hljs-built_in">plot</span>(delta_ans);               <span class="hljs-comment">% 可以看到结果相差不大</span><br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>test_page</title>
    <link href="/2024/07/06/test-page/"/>
    <url>/2024/07/06/test-page/</url>
    
    <content type="html"><![CDATA[<h1 id="波函数">波函数</h1><p>粒子的波函数<span class="math inline">\(\Psi(x,t)\)</span>（一维）或<span class="math inline">\(\Psi(\boldsymbol{r},t)\)</span>（三维）是复域函数，不能直接平方。而应该用模平方<spanclass="math inline">\(|\Psi(\boldsymbol{r}, t)|^2 \equiv \Psi^*\Psi\)</span>。<spanclass="math inline">\(\Psi\)</span>的共轭复数是<spanclass="math inline">\(\Psi^{*}\)</span>。全空间的概率密度积分为1，即<spanclass="math inline">\(\int \Psi^* \Psi dV = 1\)</span></p><h1 id="量子力学的基本假设">量子力学的基本假设</h1><p>粒子的波函数<span class="math inline">\(\Psi(\boldsymbol{r},t) =\psi_0 e^{i(\boldsymbol{k\cdot r}-wt)}\)</span></p><p>能量、动量变换<span class="math inline">\(E\)</span> -&gt; <spanclass="math inline">\(i\hbar\frac{\partial}{\partial t}\)</span>， <spanclass="math inline">\(\boldsymbol{P}\)</span> -&gt; <spanclass="math inline">\(-i\hbar \nabla\)</span></p><h1 id="薛定谔方程一般形式">薛定谔方程一般形式</h1><p>薛定谔方程一般形式： <span class="math display">\[\left[ -\frac{\hbar^2}{2m} \nabla^2 + V(\boldsymbol{r}) \right]\Psi(\boldsymbol{r}, t) = i\hbar\frac{\partial}{\partialt}\Psi(\boldsymbol{r}, t)\]</span> 其对应粒子质量<spanclass="math inline">\(m\)</span>，动量<spanclass="math inline">\(\boldsymbol{p}\)</span>，在势场<spanclass="math inline">\(V(\boldsymbol{r})\)</span>中的粒子能量表达式：<span class="math display">\[E = \frac{\boldsymbol{p}^2}{2m} + V(\boldsymbol{r})\]</span></p><p>薛定谔方程为线性微分方程，所以方程的解可以线性叠加，波函数是方程的解，所以波函数可以线性叠加</p><h1 id="定态薛定谔方程">定态薛定谔方程</h1><p><spanclass="math inline">\(V(\boldsymbol{r})\)</span>不显含时间t，可以用变数分离法求薛定谔方程特解。令<spanclass="math inline">\(\Psi(\boldsymbol{r}, t) =\psi(\boldsymbol{r})T(t)\)</span> 两边除以<spanclass="math inline">\(\psi T\)</span>得到 <span class="math display">\[\frac{1}{\psi} \left[ -\frac{\hbar^2}{2m} \nabla^2 + V(\boldsymbol{r})\right]\psi = \frac{i\hbar}{T} \frac{dT}{dt}\]</span> 令<spanclass="math inline">\(E\)</span>为分离常数，其具有能量量纲，与<spanclass="math inline">\(\boldsymbol{r},t\)</span>无关 <spanclass="math display">\[\frac{i\hbar}{T} \frac{dT}{dt} = E \quad (1)\]</span> <span class="math display">\[\frac{1}{\psi} \left[ -\frac{\hbar^2}{2m} \nabla^2 + V(\boldsymbol{r})\right]\psi = E \quad (2)\]</span> 解<span class="math inline">\((1)\)</span>得<spanclass="math inline">\(T=T_0e^{-iEt/\hbar}\)</span>。把常数<spanclass="math inline">\(T_0\)</span>归到<spanclass="math inline">\(\psi\)</span>中，<spanclass="math inline">\(\Psi(\boldsymbol{r}, t) =\psi(\boldsymbol{r})e^{-iEt/\hbar}\)</span>。</p><p>概率密度<span class="math inline">\(\Psi^*\Psi =\psi^*\psi\)</span>与时间无关</p><p>式<span class="math inline">\((2)\)</span>就是定态薛定谔方程 <spanclass="math display">\[\left[ -\frac{\hbar^2}{2m} \nabla^2 + V(\boldsymbol{r}) \right]\psi =E\psi\]</span></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2024/07/06/hello-world/"/>
    <url>/2024/07/06/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your veryfirst post. Check <a href="https://hexo.io/docs/">documentation</a> formore info. If you get any problems when using Hexo, you can find theanswer in <ahref="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> oryou can ask me on <ahref="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="quick-start">Quick Start</h2><h3 id="create-a-new-post">Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <ahref="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="run-server">Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="generate-static-files">Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <ahref="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="deploy-to-remote-sites">Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <ahref="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
